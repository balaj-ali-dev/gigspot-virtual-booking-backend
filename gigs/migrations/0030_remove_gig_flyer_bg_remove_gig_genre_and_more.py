# Generated by Django 5.1.7 on 2025-06-04 14:40

import django.core.validators
import django.db.models.deletion
import gigs.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('custom_auth', '0026_rename_adress_venue_address'),
        ('gigs', '0029_alter_gig_booking_end_date_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='gig',
            name='flyer_bg',
        ),
        migrations.RemoveField(
            model_name='gig',
            name='genre',
        ),
        migrations.RemoveField(
            model_name='gig',
            name='max_artist',
        ),
        migrations.RemoveField(
            model_name='gig',
            name='name',
        ),
        migrations.RemoveField(
            model_name='gig',
            name='user',
        ),
        migrations.AddField(
            model_name='gig',
            name='created_by',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_gigs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='gig',
            name='flyer_image',
            field=models.ImageField(blank=True, null=True, upload_to=gigs.models.event_flyer_path),
        ),
        migrations.AddField(
            model_name='gig',
            name='gig_type',
            field=models.CharField(choices=[('artist_gig', 'Artist Gig'), ('venue_gig', 'Venue Gig')], default='artist_gig', help_text='Type of gig (artist-created or venue-created)', max_length=20),
        ),
        migrations.AddField(
            model_name='gig',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='liked_gigs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='gig',
            name='max_artists',
            field=models.PositiveIntegerField(blank=True, default=1, help_text='Maximum number of artists that can participate', null=True, validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='gig',
            name='title',
            field=models.CharField(default='', help_text='Title of the gig/event', max_length=255),
        ),
        migrations.AlterField(
            model_name='gig',
            name='description',
            field=models.TextField(blank=True, default='', null=True),
        ),
        migrations.AlterField(
            model_name='gig',
            name='max_tickets',
            field=models.PositiveIntegerField(blank=True, default=100, help_text='Maximum number of tickets available', null=True, validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='gig',
            name='minimum_performance_tier',
            field=models.CharField(blank=True, choices=[('fresh_talent', 'Fresh Talent'), ('new_blood', 'New Blood'), ('up_and_coming', 'Up and Coming'), ('rising_star', 'Rising Star'), ('scene_king', 'Scene King'), ('rockstar', 'Rockstar'), ('goliath', 'Goliath')], default='fresh_talent', help_text='Minimum performance tier required for artists', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='gig',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', help_text='Current status of the gig', max_length=20),
        ),
        migrations.AlterField(
            model_name='gig',
            name='ticket_price',
            field=models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='gig',
            name='venue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gigs', to='custom_auth.venue'),
        ),
        migrations.AlterField(
            model_name='gig',
            name='venue_fee',
            field=models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)]),
        ),
    ]
